<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="GradleMigrationSettings" migrationVersion="1" />
  <component name="GradleSettings">
    <option name="linkedExternalProjectsSettings">
      <GradleProjectSettings>
        <option name="delegatedBuild" value="false" />
        <option name="distributionType" value="WRAPPED" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="gradleHome" value="/usr/local/Cellar/gradle/8.3/libexec" />
        <option name="modules">
          <set>
            <option value="$PROJECT_DIR$" />
            <option value="$PROJECT_DIR$/Learning Progress Tracker (Java)/task" />
            <option value="$PROJECT_DIR$/Learning Progress Tracker (Java)/task/build/classes/java" />
            <option value="$PROJECT_DIR$/Learning Progress Tracker (Java)/task/build/generated/sources/annotationProcessor/java" />
            <option value="$PROJECT_DIR$/Learning Progress Tracker (Java)/task/build/generated/sources/headers/java" />
            <option value="$PROJECT_DIR$/Learning Progress Tracker (Java)/task/build/reports/tests" />
            <option value="$PROJECT_DIR$/Learning Progress Tracker (Java)/task/build/test-results" />
            <option value="$PROJECT_DIR$/Learning Progress Tracker (Java)/task/build/tmp" />
            <option value="$PROJECT_DIR$/Topics/Anonymous class/An anonymous class with three methods" />
            <option value="$PROJECT_DIR$/Topics/Anonymous class/Capture variables" />
            <option value="$PROJECT_DIR$/Topics/Anonymous class/Exploring Java's Anonymous Classes" />
            <option value="$PROJECT_DIR$/Topics/Anonymous class/Find a correct syntax" />
            <option value="$PROJECT_DIR$/Topics/Anonymous class/Single method" />
            <option value="$PROJECT_DIR$/Topics/Anonymous class/String reverser" />
            <option value="$PROJECT_DIR$/Topics/Anonymous class/Theory" />
            <option value="$PROJECT_DIR$/Topics/Anonymous class/Tricky Java  Final in Anonymous Classes" />
            <option value="$PROJECT_DIR$/Topics/Anonymous class/What about context" />
            <option value="$PROJECT_DIR$/Topics/Array/Declarations" />
            <option value="$PROJECT_DIR$/Topics/Array/Initializations" />
            <option value="$PROJECT_DIR$/Topics/Array/Initializing an array of characters" />
            <option value="$PROJECT_DIR$/Topics/Array/Initializing an array of integers" />
            <option value="$PROJECT_DIR$/Topics/Array/Initializing an array of longs" />
            <option value="$PROJECT_DIR$/Topics/Array/Meanings of statements" />
            <option value="$PROJECT_DIR$/Topics/Array/The last element of an array" />
            <option value="$PROJECT_DIR$/Topics/Array/Theory" />
            <option value="$PROJECT_DIR$/Topics/Array/Ways to create an array of ints" />
            <option value="$PROJECT_DIR$/Topics/ArrayList/Adding items" />
            <option value="$PROJECT_DIR$/Topics/ArrayList/Concat positive numbers" />
            <option value="$PROJECT_DIR$/Topics/ArrayList/Creating list" />
            <option value="$PROJECT_DIR$/Topics/ArrayList/How to get an element by the index" />
            <option value="$PROJECT_DIR$/Topics/ArrayList/Output the list's elements" />
            <option value="$PROJECT_DIR$/Topics/ArrayList/Theory" />
            <option value="$PROJECT_DIR$/Topics/Boxing and unboxing/Autoboxing int" />
            <option value="$PROJECT_DIR$/Topics/Boxing and unboxing/Identify a possible exception" />
            <option value="$PROJECT_DIR$/Topics/Boxing and unboxing/Initializing long value" />
            <option value="$PROJECT_DIR$/Topics/Boxing and unboxing/Only true or false" />
            <option value="$PROJECT_DIR$/Topics/Boxing and unboxing/Result of the code" />
            <option value="$PROJECT_DIR$/Topics/Boxing and unboxing/Safe converting" />
            <option value="$PROJECT_DIR$/Topics/Boxing and unboxing/Theory" />
            <option value="$PROJECT_DIR$/Topics/Boxing and unboxing/Wrapper classes for char and int" />
            <option value="$PROJECT_DIR$/Topics/Choosing the right collection/A proper collection to avoid duplicates" />
            <option value="$PROJECT_DIR$/Topics/Choosing the right collection/A proper index-based collection" />
            <option value="$PROJECT_DIR$/Topics/Choosing the right collection/A proper sorted collection without duplicates" />
            <option value="$PROJECT_DIR$/Topics/Choosing the right collection/An unsolvable problem" />
            <option value="$PROJECT_DIR$/Topics/Choosing the right collection/Even numbers go first" />
            <option value="$PROJECT_DIR$/Topics/Choosing the right collection/General-purpose implementations" />
            <option value="$PROJECT_DIR$/Topics/Choosing the right collection/Removing duplicates and sorting" />
            <option value="$PROJECT_DIR$/Topics/Choosing the right collection/Substitution cipher" />
            <option value="$PROJECT_DIR$/Topics/Choosing the right collection/Theory" />
            <option value="$PROJECT_DIR$/Topics/Default methods/Add new default method" />
            <option value="$PROJECT_DIR$/Topics/Default methods/Default method's body" />
            <option value="$PROJECT_DIR$/Topics/Default methods/Diamond problem" />
            <option value="$PROJECT_DIR$/Topics/Default methods/Implement a default method" />
            <option value="$PROJECT_DIR$/Topics/Default methods/Java Interface Default Method Execution" />
            <option value="$PROJECT_DIR$/Topics/Default methods/Journey Towards Java Default Methods" />
            <option value="$PROJECT_DIR$/Topics/Default methods/Resolve a diamond problem" />
            <option value="$PROJECT_DIR$/Topics/Default methods/Theory" />
            <option value="$PROJECT_DIR$/Topics/Default methods/What is the reason for default methods" />
            <option value="$PROJECT_DIR$/Topics/Default methods/What is the result" />
            <option value="$PROJECT_DIR$/Topics/Generics and Object/Box vs GenericBox  A Java Showdown" />
            <option value="$PROJECT_DIR$/Topics/Generics and Object/Boxes are not just objects" />
            <option value="$PROJECT_DIR$/Topics/Generics and Object/Correct the usage of non-generic class" />
            <option value="$PROJECT_DIR$/Topics/Generics and Object/Initialize an object of a generic class" />
            <option value="$PROJECT_DIR$/Topics/Generics and Object/Instance without type argument" />
            <option value="$PROJECT_DIR$/Topics/Generics and Object/Reusing code with Object" />
            <option value="$PROJECT_DIR$/Topics/Generics and Object/Theory" />
            <option value="$PROJECT_DIR$/Topics/Generics and Object/Why generics" />
            <option value="$PROJECT_DIR$/Topics/HashMap/Countries and capitals" />
            <option value="$PROJECT_DIR$/Topics/HashMap/How many buckets" />
            <option value="$PROJECT_DIR$/Topics/HashMap/Remove long names" />
            <option value="$PROJECT_DIR$/Topics/HashMap/The same letter" />
            <option value="$PROJECT_DIR$/Topics/HashMap/The same pairs" />
            <option value="$PROJECT_DIR$/Topics/HashMap/Theory" />
            <option value="$PROJECT_DIR$/Topics/HashMap/When to use" />
            <option value="$PROJECT_DIR$/Topics/Introduction to generic programming/Correct the program" />
            <option value="$PROJECT_DIR$/Topics/Introduction to generic programming/Declaring generic classes - 2" />
            <option value="$PROJECT_DIR$/Topics/Introduction to generic programming/Generic parameter values" />
            <option value="$PROJECT_DIR$/Topics/Introduction to generic programming/Pastry packing optimization" />
            <option value="$PROJECT_DIR$/Topics/Introduction to generic programming/Theory" />
            <option value="$PROJECT_DIR$/Topics/Introduction to generic programming/Type arguments" />
            <option value="$PROJECT_DIR$/Topics/Introduction to generic programming/Type arguments - 2" />
            <option value="$PROJECT_DIR$/Topics/Iterating over arrays/Alphabetical order" />
            <option value="$PROJECT_DIR$/Topics/Iterating over arrays/Check if an array contains two numbers" />
            <option value="$PROJECT_DIR$/Topics/Iterating over arrays/Check if an array is sorted ascending" />
            <option value="$PROJECT_DIR$/Topics/Iterating over arrays/Count how many times a number occurs" />
            <option value="$PROJECT_DIR$/Topics/Iterating over arrays/Cyclically shifting elements" />
            <option value="$PROJECT_DIR$/Topics/Iterating over arrays/Does an array contain N" />
            <option value="$PROJECT_DIR$/Topics/Iterating over arrays/Sum array elements greater than a value" />
            <option value="$PROJECT_DIR$/Topics/Iterating over arrays/The longest ascending sequence" />
            <option value="$PROJECT_DIR$/Topics/Iterating over arrays/The maximum product of adjacent elements" />
            <option value="$PROJECT_DIR$/Topics/Iterating over arrays/The sum of array elements" />
            <option value="$PROJECT_DIR$/Topics/Iterating over arrays/Theory" />
            <option value="$PROJECT_DIR$/Topics/Iterating over arrays/Triples" />
            <option value="$PROJECT_DIR$/Topics/Lambda expressions/Expression closure" />
            <option value="$PROJECT_DIR$/Topics/Lambda expressions/Expressions" />
            <option value="$PROJECT_DIR$/Topics/Lambda expressions/Higher-order functions" />
            <option value="$PROJECT_DIR$/Topics/Lambda expressions/Max of two integers" />
            <option value="$PROJECT_DIR$/Topics/Lambda expressions/Next even number" />
            <option value="$PROJECT_DIR$/Topics/Lambda expressions/Parts of code" />
            <option value="$PROJECT_DIR$/Topics/Lambda expressions/Statements" />
            <option value="$PROJECT_DIR$/Topics/Lambda expressions/Theory" />
            <option value="$PROJECT_DIR$/Topics/LinkedList vs. ArrayList/Fast for ArrayList" />
            <option value="$PROJECT_DIR$/Topics/LinkedList vs. ArrayList/Fast for LinkedList" />
            <option value="$PROJECT_DIR$/Topics/LinkedList vs. ArrayList/Remove the same" />
            <option value="$PROJECT_DIR$/Topics/LinkedList vs. ArrayList/Restore the algorithm" />
            <option value="$PROJECT_DIR$/Topics/LinkedList vs. ArrayList/The big merge" />
            <option value="$PROJECT_DIR$/Topics/LinkedList vs. ArrayList/The fair exchange" />
            <option value="$PROJECT_DIR$/Topics/LinkedList vs. ArrayList/Theory" />
            <option value="$PROJECT_DIR$/Topics/LinkedList vs. ArrayList/Transfer both lists" />
            <option value="$PROJECT_DIR$/Topics/LinkedList vs. ArrayList/What to think about" />
            <option value="$PROJECT_DIR$/Topics/Method references/All correct method references" />
            <option value="$PROJECT_DIR$/Topics/Method references/Ascending and descending sorting" />
            <option value="$PROJECT_DIR$/Topics/Method references/Theory" />
            <option value="$PROJECT_DIR$/Topics/Package/A keyword for importing a class" />
            <option value="$PROJECT_DIR$/Topics/Package/Accessible packages" />
            <option value="$PROJECT_DIR$/Topics/Package/Binary search" />
            <option value="$PROJECT_DIR$/Topics/Package/Class hierarchy" />
            <option value="$PROJECT_DIR$/Topics/Package/Creating instances" />
            <option value="$PROJECT_DIR$/Topics/Package/Match imports" />
            <option value="$PROJECT_DIR$/Topics/Package/Package features" />
            <option value="$PROJECT_DIR$/Topics/Package/Purpose" />
            <option value="$PROJECT_DIR$/Topics/Package/Short names" />
            <option value="$PROJECT_DIR$/Topics/Package/Sorting arrays" />
            <option value="$PROJECT_DIR$/Topics/Package/The default import" />
            <option value="$PROJECT_DIR$/Topics/Package/Theory" />
            <option value="$PROJECT_DIR$/Topics/Parameterized test/Argument sources" />
            <option value="$PROJECT_DIR$/Topics/Parameterized test/Looking for a bug" />
            <option value="$PROJECT_DIR$/Topics/Parameterized test/Methods as sources" />
            <option value="$PROJECT_DIR$/Topics/Parameterized test/Number of arguments" />
            <option value="$PROJECT_DIR$/Topics/Parameterized test/Palindromes" />
            <option value="$PROJECT_DIR$/Topics/Parameterized test/Parameters" />
            <option value="$PROJECT_DIR$/Topics/Parameterized test/Theory" />
            <option value="$PROJECT_DIR$/Topics/Parameterized test/Tricky syntax" />
            <option value="$PROJECT_DIR$/Topics/Runtime type checking/File classes" />
            <option value="$PROJECT_DIR$/Topics/Runtime type checking/File equality" />
            <option value="$PROJECT_DIR$/Topics/Runtime type checking/Find a statement that returns false" />
            <option value="$PROJECT_DIR$/Topics/Runtime type checking/Pattern matching in practice" />
            <option value="$PROJECT_DIR$/Topics/Runtime type checking/Pattern matching with the logical OR operator" />
            <option value="$PROJECT_DIR$/Topics/Runtime type checking/Select statements" />
            <option value="$PROJECT_DIR$/Topics/Runtime type checking/Sort out the classes" />
            <option value="$PROJECT_DIR$/Topics/Runtime type checking/Statements which returns true" />
            <option value="$PROJECT_DIR$/Topics/Runtime type checking/Sum of the areas" />
            <option value="$PROJECT_DIR$/Topics/Runtime type checking/Theory" />
            <option value="$PROJECT_DIR$/Topics/Runtime type checking/Who is who" />
            <option value="$PROJECT_DIR$/Topics/Stack/Deque output" />
            <option value="$PROJECT_DIR$/Topics/Stack/Getting the max element of a stack" />
            <option value="$PROJECT_DIR$/Topics/Stack/Match methods" />
            <option value="$PROJECT_DIR$/Topics/Stack/Methods" />
            <option value="$PROJECT_DIR$/Topics/Stack/Stack implementation" />
            <option value="$PROJECT_DIR$/Topics/Stack/The LIFO principle in action" />
            <option value="$PROJECT_DIR$/Topics/Stack/Theory" />
            <option value="$PROJECT_DIR$/Topics/Stack/Which brackets are balanced" />
            <option value="$PROJECT_DIR$/Topics/Test lifecycle annotations/Annotate and run" />
            <option value="$PROJECT_DIR$/Topics/Test lifecycle annotations/Correct order" />
            <option value="$PROJECT_DIR$/Topics/Test lifecycle annotations/Good reasons" />
            <option value="$PROJECT_DIR$/Topics/Test lifecycle annotations/Lifecycle behavior" />
            <option value="$PROJECT_DIR$/Topics/Test lifecycle annotations/Test fixture" />
            <option value="$PROJECT_DIR$/Topics/Test lifecycle annotations/Theory" />
            <option value="$PROJECT_DIR$/Topics/The Collections Framework overview/A package" />
            <option value="$PROJECT_DIR$/Topics/The Collections Framework overview/Blacklist" />
            <option value="$PROJECT_DIR$/Topics/The Collections Framework overview/Collection interfaces" />
            <option value="$PROJECT_DIR$/Topics/The Collections Framework overview/Creating instances" />
            <option value="$PROJECT_DIR$/Topics/The Collections Framework overview/Root interfaces" />
            <option value="$PROJECT_DIR$/Topics/The Collections Framework overview/Squaring numbers" />
            <option value="$PROJECT_DIR$/Topics/The Collections Framework overview/Supported collections" />
            <option value="$PROJECT_DIR$/Topics/The Collections Framework overview/Theory" />
            <option value="$PROJECT_DIR$/Topics/The List interface/Backward indexes" />
            <option value="$PROJECT_DIR$/Topics/The List interface/Companies" />
            <option value="$PROJECT_DIR$/Topics/The List interface/Count the value occurrences" />
            <option value="$PROJECT_DIR$/Topics/The List interface/Greek letters" />
            <option value="$PROJECT_DIR$/Topics/The List interface/Implementations" />
            <option value="$PROJECT_DIR$/Topics/The List interface/Mutable lists" />
            <option value="$PROJECT_DIR$/Topics/The List interface/Replacing ArrayList with LinkedList" />
            <option value="$PROJECT_DIR$/Topics/The List interface/Results of operations" />
            <option value="$PROJECT_DIR$/Topics/The List interface/Select correct assignments" />
            <option value="$PROJECT_DIR$/Topics/The List interface/Setting a new name" />
            <option value="$PROJECT_DIR$/Topics/The List interface/Similarities between lists and arrays" />
            <option value="$PROJECT_DIR$/Topics/The List interface/The longest string in the list" />
            <option value="$PROJECT_DIR$/Topics/The List interface/Theory" />
            <option value="$PROJECT_DIR$/Topics/The Map interface/Duplications" />
            <option value="$PROJECT_DIR$/Topics/The Map interface/Getting value by key" />
            <option value="$PROJECT_DIR$/Topics/The Map interface/How many entries" />
            <option value="$PROJECT_DIR$/Topics/The Map interface/Is it collection" />
            <option value="$PROJECT_DIR$/Topics/The Map interface/Is it true or not" />
            <option value="$PROJECT_DIR$/Topics/The Map interface/Sum of values" />
            <option value="$PROJECT_DIR$/Topics/The Map interface/Theory" />
            <option value="$PROJECT_DIR$/Topics/The Map interface/Value or min" />
            <option value="$PROJECT_DIR$/Topics/The Set interface/Comparing sets" />
            <option value="$PROJECT_DIR$/Topics/The Set interface/Creating a set" />
            <option value="$PROJECT_DIR$/Topics/The Set interface/Match methods and their purposes" />
            <option value="$PROJECT_DIR$/Topics/The Set interface/Output elements" />
            <option value="$PROJECT_DIR$/Topics/The Set interface/Spell checker" />
            <option value="$PROJECT_DIR$/Topics/The Set interface/Strict superset" />
            <option value="$PROJECT_DIR$/Topics/The Set interface/The size of a set" />
            <option value="$PROJECT_DIR$/Topics/The Set interface/Theory" />
            <option value="$PROJECT_DIR$/Topics/The Set interface/TreeSet storage order" />
            <option value="$PROJECT_DIR$/Topics/Unit testing with JUnit/An empty test" />
            <option value="$PROJECT_DIR$/Topics/Unit testing with JUnit/Annotation" />
            <option value="$PROJECT_DIR$/Topics/Unit testing with JUnit/Assertion" />
            <option value="$PROJECT_DIR$/Topics/Unit testing with JUnit/Did it fail" />
            <option value="$PROJECT_DIR$/Topics/Unit testing with JUnit/Failed assertion" />
            <option value="$PROJECT_DIR$/Topics/Unit testing with JUnit/Test driven development" />
            <option value="$PROJECT_DIR$/Topics/Unit testing with JUnit/Theory" />
            <option value="$PROJECT_DIR$/Topics/What are collections/Accessing element of a collection" />
            <option value="$PROJECT_DIR$/Topics/What are collections/Initialize a collection" />
            <option value="$PROJECT_DIR$/Topics/What are collections/Resizable structure" />
            <option value="$PROJECT_DIR$/Topics/What are collections/The one suitable description" />
            <option value="$PROJECT_DIR$/Topics/What are collections/Theory" />
            <option value="$PROJECT_DIR$/Topics/hashCode() and equals() in Collections/Duplicate elements in HashSet" />
            <option value="$PROJECT_DIR$/Topics/hashCode() and equals() in Collections/Theory" />
            <option value="$PROJECT_DIR$/Topics/hashCode() and equals() in Collections/Understanding 'put', 'equals()', and 'hashCode()'" />
            <option value="$PROJECT_DIR$/Topics/hashCode() and equals() in Collections/Unique pairs in HashMap" />
            <option value="$PROJECT_DIR$/Topics/hashCode() and equals()/A pair of methods to be overridden" />
            <option value="$PROJECT_DIR$/Topics/hashCode() and equals()/Complex numbers" />
            <option value="$PROJECT_DIR$/Topics/hashCode() and equals()/Comprehension" />
            <option value="$PROJECT_DIR$/Topics/hashCode() and equals()/Comprehension (1)" />
            <option value="$PROJECT_DIR$/Topics/hashCode() and equals()/Theory" />
            <option value="$PROJECT_DIR$/util" />
          </set>
        </option>
      </GradleProjectSettings>
    </option>
  </component>
</project>